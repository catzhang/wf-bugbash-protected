id: GetRowsFromPostgres
type: datasource
subtype: SqlQueryUnified
template:
  ordered:
    - queryRefreshTime: ''
    - allowedGroupIds: []
    - streamResponse: false
    - records: ''
    - lastReceivedFromResourceAt: null
    - databasePasswordOverride: ''
    - queryDisabledMessage: ''
    - servedFromCache: false
    - offlineUserQueryInputs: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - workflowParams: null
    - resourceNameOverride: ''
    - runWhenModelUpdates: false
    - showFailureToaster: true
    - query: |-
        -- replace with any select statement you'd like to run
        select * 
        from users
        limit 100
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - error: null
    - workflowRunBodyType: raw
    - privateParams:
        array: []
    - queryRunOnSelectorUpdate: false
    - runWhenPageLoadsDelay: ''
    - warningCodes:
        array: []
    - data: null
    - recordId: ''
    - importedQueryInputs:
        object: {}
    - _additionalScope: []
    - isImported: false
    - showSuccessToaster: true
    - dataArray:
        array: []
    - cacheKeyTtl: ''
    - filterBy: ''
    - requestSentTimestamp: null
    - databaseHostOverride: ''
    - metadata: null
    - editorMode: sql
    - queryRunTime: null
    - actionType: ''
    - changesetObject: ''
    - shouldUseLegacySql: false
    - offlineOptimisticResponse: null
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - finished: null
    - databaseNameOverride: ''
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - resourceTypeOverride: postgresql
    - watchedParams:
        array: []
    - enableErrorTransformer: false
    - databaseWarehouseOverride: ''
    - enableBulkUpdates: false
    - showLatestVersionUpdatedWarning: false
    - timestamp: 0
    - evalType: script
    - importedQueryDefaults:
        object: {}
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - overrideOrgCacheForUserCache: false
    - bulkUpdatePrimaryKey: ''
    - runWhenPageLoads: false
    - transformer: >-
        // type your code here

        // example: return formatDataAsArray(data).filter(row => row.quantity >
        20)

        return data
    - events:
        array: []
    - tableName: ''
    - queryTimeout: '120000'
    - workflowId: null
    - requireConfirmation: false
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups:
        array: []
    - databaseUsernameOverride: ''
    - databaseRoleOverride: ''
    - shouldEnableBatchQuerying: false
    - doNotThrowOnNoOp: false
    - offlineQueryType: None
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2024-10-31T18:14:38.181Z
blockData:
  top: 48
  left: 512
  uuid: 2af72788-b76b-445b-96a0-6a2c0e40abfb
  comment:
    body: Modify sql below and press ▶️
    visible: true
    pluginId: GetRowsFromPostgres-comment
  pluginId: GetRowsFromPostgres
  blockType: default
  editorType: SqlQueryUnified
  resourceName: ''
  incomingOnSuccessEdges:
    - 9ef7cb19-8cda-422f-97c3-43482792c07b
