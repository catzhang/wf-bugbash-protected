id: ProcessData
type: datasource
subtype: JavascriptQuery
resourceName: JavascriptQuery
template:
  ordered:
    - queryRefreshTime: ''
    - allowedGroupIds: []
    - streamResponse: false
    - lastReceivedFromResourceAt: null
    - queryDisabledMessage: ''
    - servedFromCache: false
    - offlineUserQueryInputs: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - workflowParams: null
    - resourceNameOverride: ''
    - runWhenModelUpdates: false
    - showFailureToaster: true
    - query: |
        // logging data can help debug
        console.log({
          numRows: GetRowsFromPostgres.data?.length
        })

        if (GetRowsFromPostgres.data?.length) {
          // don't forget about default libraries like lodash
          return `Processed users:
          ${JSON.stringify(GetRowsFromPostgres.data)}
          `  
        } else {
          return `Warning: no users processed!`
        }
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - error: null
    - workflowRunBodyType: raw
    - privateParams:
        array: []
    - queryRunOnSelectorUpdate: false
    - runWhenPageLoadsDelay: ''
    - data: null
    - importedQueryInputs:
        object: {}
    - _additionalScope: []
    - isImported: false
    - showSuccessToaster: true
    - cacheKeyTtl: ''
    - requestSentTimestamp: null
    - metadata: null
    - editorMode: sql
    - queryRunTime: null
    - changesetObject: ''
    - offlineOptimisticResponse: null
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - finished: null
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - resourceTypeOverride: null
    - watchedParams:
        array: []
    - enableErrorTransformer: false
    - showLatestVersionUpdatedWarning: false
    - timestamp: 0
    - evalType: script
    - importedQueryDefaults:
        object: {}
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - overrideOrgCacheForUserCache: false
    - runWhenPageLoads: false
    - transformer: >-
        // type your code here

        // example: return formatDataAsArray(data).filter(row => row.quantity >
        20)

        return data
    - events:
        array: []
    - queryTimeout: '120000'
    - workflowId: null
    - requireConfirmation: false
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups:
        array: []
    - offlineQueryType: None
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2024-10-31T18:14:38.182Z
blockData:
  top: 48
  left: 1072
  uuid: 1ec3689c-06f4-487b-aa36-a2a236545bd2
  comment:
    body: Add any processing below
    visible: true
    pluginId: ProcessData-comment
  pluginId: ProcessData
  blockType: code
  editorType: JavascriptQuery
  resourceName: JavascriptQuery
  incomingOnSuccessEdges:
    - 2af72788-b76b-445b-96a0-6a2c0e40abfb
